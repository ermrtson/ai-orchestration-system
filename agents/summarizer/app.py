from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
import os
import logging
from dotenv import load_dotenv

load_dotenv()

app = FastAPI()
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Initialize Anthropic client (would be used in production)
ANTHROPIC_API_KEY = os.getenv("ANTHROPIC_API_KEY")

class SummarizeRequest(BaseModel):
    text: str

@app.post("/summarize")
async def summarize_text(request: SummarizeRequest):
    if not request.text:
        raise HTTPException(status_code=400, detail="Text field is required")
    
    # For testing, return a mock summary without calling Anthropic API
    return {
        "title": "Sample Document Title",
        "summary": "This is a placeholder summary for testing deployment.\n\nIt simulates what would be generated by the Anthropic Claude model in production.\n\nIn a real deployment, this would analyze the document content and generate a meaningful summary.",
        "key_findings": ["Finding 1", "Finding 2", "Finding 3"]
    }

@app.get("/health")
async def health_check():
    return {"status": "healthy", "message": "API key will be required in production"}

@app.get("/")
async def root():
    return {"message": "Summarizer Agent ready"}